---
# Playbook for building deb files

- name: Clean debian packages folders in case of the cached build
  shell: bash -c "rm -rf ./debian && rm -rf ./obj-x86_64-linux-gnu"
    chdir={{repo_sources_path}}/{{item.path}}
  with_items: "{{repo_packages_list|default([])}}"
  ignore_errors: True

- name: Clean debian packages from repository directory
  shell: bash -c "find . -name '*.deb' -type f -delete"
    chdir={{repo_sources_path}}
  ignore_errors: True

- name: Add line to rosdep package cache
  lineinfile: dest=/etc/ros/rosdep/sources.list.d/20-default.list line="yaml file://{{repo_sources_path}}/local_custom_rosdep.yaml"

- name: Create empty file or clean existing one
  shell: bash -c "cat /dev/null > {{repo_sources_path}}/local_custom_rosdep.yaml"

- name: Append repository packages to rosdep ignore list
  shell: echo "{{item.name}}:{{' '}}{ubuntu:[]}" >> {{repo_sources_path}}/local_custom_rosdep.yaml
  with_items: "{{repo_packages_list|default([])}}"
  when: complete_debian_packages_check

- name: Append workspace packages to rosdep ignore list
  shell: echo "{{item.name}}:{{' '}}{ubuntu:[]}" >> {{repo_sources_path}}/local_custom_rosdep.yaml
  with_items: "{{workspace_packages_list|default([])}}"
  when: not complete_debian_packages_check

- name: display local rosdep
  shell: cat {{repo_sources_path}}/local_custom_rosdep.yaml

- name: Update rosdep
  shell: bash -c "rosdep update"

- name: Generate ROS debian package files
  shell: bash -c "source /opt/ros/{{ros_release}}/setup.bash && bloom-generate rosdebian --os-name ubuntu --os-version trusty --ros-distro {{ros_release}}"
    chdir={{repo_sources_path}}/{{item.path}}
  with_items:
    - "{{repo_packages_list|default([])}}"
