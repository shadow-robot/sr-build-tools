FROM shadowrobot/build-tools:xenial-kinetic-ide

LABEL Description="This ROS Kinetic image contains Shadow's dexterous hand software with build tools. It includes IDE environments." Vendor="Shadow Robot" Version="1.0"

ENV remote_shell_script="https://raw.githubusercontent.com/shadow-robot/sr-build-tools/$toolset_branch/ansible/deploy.sh"

ENV PROJECTS_WS=/home/user/projects/shadow_robot
RUN echo "Running one-liner" && \
    apt-get update && \
    wget -O /tmp/oneliner "$( echo "$remote_shell_script" | sed 's/#/%23/g' )" && \
    chmod 755 /tmp/oneliner && \
    gosu $MY_USERNAME /tmp/oneliner -w $PROJECTS_WS/base -r sr-build-tools -b $toolset_branch -i data/shadow_robot-kinetic.rosinstall -v "kinetic"  && \

    echo "Installing mongocxx driver for the warehouse" && \
    cd $PROJECTS_WS/base_deps/src && \
    git clone -b 26compat https://github.com/mongodb/mongo-cxx-driver.git && \
    apt-get -qq install -y scons mongodb && \
    cd mongo-cxx-driver && \
    scons --use-system-boost --prefix=/usr/local/ --full --disable-warnings-as-errors && \

    echo "Downloading warehouse source" && \
    cd $PROJECTS_WS/base_deps/src && \
    wstool set -yu warehouse_ros_mongo --git https://github.com/ros-planning/warehouse_ros_mongo.git -v jade-devel && \
    wstool set -yu warehouse_ros --git https://github.com/ros-planning/warehouse_ros.git -v jade-devel && \

    echo "Changing folders owner" && \
    chown -R user:user mongo-cxx-driver warehouse_ros* && \

    echo "Building the workspace" && \
    cd $PROJECTS_WS/base_deps && \
    gosu $MY_USERNAME bash -c "source /opt/ros/kinetic/setup.bash && catkin_make" && \

    echo "Fixing pyassimp issue" && \
    cd /tmp/  && \
    git clone https://github.com/assimp/assimp.git && \
    cd assimp && \
    cmake CMakeLists.txt -G 'Unix Makefiles' && \
    make && \
    make install && \
    cd port/PyAssimp/ && \
    python setup.py install && \

    apt-get install emacs && \
    apt-get install bash-completion

    echo "Removing cache" && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*



ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

CMD ["/usr/bin/terminator"]
