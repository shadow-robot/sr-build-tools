---
# Playbook to install ROS (www.ros.org) onto a system.
# http://wiki.ros.org/hydro/Installation/Ubuntu
# TODO:
# - Do some sanity checks on the ros versions, distro etc.
#   E.g. hydro only allowed for precise, quantal, raring

- name: Test for restricted, universe, multiverse
  shell: grep '^#deb.*{{ansible_distribution_release}}\(-updates\)\? \(restricted\|universe\|multiverse\)' /etc/apt/sources.list
  register: sources_test_result
  ignore_errors: true
  failed_when: false
  changed_when: sources_test_result.rc == 0

- name: Activate restricted, universe, multiverse
  command: sed -i".bak-{{ansible_date_time.epoch}}" "s/^#\(deb.*{{ansible_distribution_release}}\(-updates\)\? \(restricted\|universe\|multiverse\)\)/\1/" /etc/apt/sources.list
  when: sources_test_result.rc == 0

- name: Add the ROS repo key
  apt_key: id=AB17C654 url=http://packages.ros.org/ros.key

- name: Add ROS repo
  copy: dest=/etc/apt/sources.list.d/ros-latest.list
        content="deb http://packages.ros.org/ros/ubuntu {{ansible_distribution_release}} main"
        owner=root group=root mode=644

- name: Update package lists
  apt: update_cache=yes

# Is this a bit rude todo here? dist or safe or full?
# http://docs.ansible.com/apt_module.html
- name: Update all packages to the latest version
  apt: upgrade=dist

# ROS Install
- name: Install ROS stuff
  apt: name={{item}}
  with_items:
    - "{{ ros_base_package }}"
    - python-wstool
    - python-rosinstall
    - python-pip
    - ssh

- name: Aggregate specific ROS packages names
  when: ros_packages is defined and ros_packages != ""
  action: shell echo "ros-{{ros_release}}-{{item}}"
  with_items: ros_packages
  register: full_ros_packages_names

- name: Install specific ROS packages
  when: full_ros_packages_names.changed
  apt: name={{item.stdout}}
  with_items: full_ros_packages_names.results

- name: rosdep init
  command: rosdep init creates=/etc/ros/rosdep/sources.list.d/20-default.list
