# Copyright 2022 Shadow Robot Company Ltd.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

---
# Playbook for Deb files check

# Redundant loop count to make sure that even complex dependencies scenario is resolved
# mv command will fail in case if package is already installed for this case there is ignore_errors
- name: Create and install debian packages recursively in order to fix local dependencies
  shell: bash -c "source <(grep '^export\|^source' {{ansible_env.HOME}}/.bashrc) && source {{ros_workspace}}/devel/setup.bash && fakeroot ./debian/rules binary && mv -vt .  ../*.deb && sudo dpkg --install *.deb"
    chdir={{ros_workspace}}/{{item[1].path}}
  ignore_errors: True
  with_nested:
    - "{{workspace_packages_list|default([])}}"
    - "{{workspace_packages_list|default([])}}"

# In case if there is not errors fakeroot will not create new deb file just exit with 0 else it will print error
- name: Check if debian build doesn't have any errors
  shell: bash -c "source <(grep '^export\|^source' {{ansible_env.HOME}}/.bashrc) && source {{ros_workspace}}/devel/setup.bash && fakeroot ./debian/rules binary"
    chdir={{repo_sources_path}}/{{item.path}}
  with_items:
    - "{{repo_packages_list|default([])}}"

- name: Check if debian install doesn't have any errors
  shell: bash -c "source <(grep '^export\|^source' {{ansible_env.HOME}}/.bashrc) && sudo dpkg --install *.deb"
    chdir={{repo_sources_path}}/{{item.path}}
  with_items:
    - "{{repo_packages_list|default([])}}"

- name: Read all installed packages from repository
  shell: bash -c "find . -name '*.deb' -print0  | xargs -0 -I {} dpkg --info  {} | sed -n -e 's/^\s*Package:\s*//p'"
    chdir={{repo_sources_path}}
  register: installed_packages_names

- name: Set variable to workaround ansible type evaluation issue
  set_fact:
    installed_packages_names_stdout_lines: "{{installed_packages_names.stdout_lines}}"

- name: Uninstall all packages
  shell: bash -c "sudo dpkg --purge {{item}}"
  ignore_errors: True
  with_items:
    - "{{installed_packages_names_stdout_lines|default([])}}"
