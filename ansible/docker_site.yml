---
# Playbook Continuous Integration servers.

- hosts: all
  vars:
    ros_release: "noetic"
    ansible_python_interpreter: /usr/bin/python3
  roles:
    - {role: docker/setup_ui, tags: ["setup_docker_user"]}
    - {role: gazebo_models, tags: ["setup_docker_user"]}
    - {role: docker/ide/pycharm, tags: ["setup_docker_pycharm", "setup_docker_ide"]}
    - {role: docker/ide/qtcreator, tags: ["setup_docker_qtcreator", "setup_docker_ide"]}
    - {role: ci/servers/travis/init, tags: ["travis"]}
    - {role: ci/servers/shippable/init, tags: ["shippable"]}
    - {role: ci/servers/semaphore/init, tags: ["semaphore"]}
    - {role: ci/servers/circle/init, tags: ["circle"]}
    - {role: ci/servers/docker_hub/init, tags: ["docker_hub"]}
    - {role: ci/servers/local/init, tags: ["local"]}
    - {role: ci/build/pr_only, tags: ["build_pr_only"]}
    - {role: ci/init/check_cache, when: run_build, tags: ["check_cache"]}
    - {role: ci/init/install, when: run_install, tags: ["build", "unit_tests", "software_tests", "all_tests",
                                                        "code_coverage", "codecov_tool", "python_code_coverage",
                                                        "cpp_code_coverage", "check_deb_make", "complete_deb_check",
                                                        "check_build", "python_code_style_check",
                                                        "cpp_code_style_check", "xml_code_style_check",
                                                        "catkin_code_style_check", "code_style_check",
                                                        "create_workspace", "benchmarking",
                                                        "check_install"]}
    - {role: ci/init/create_workspace, when: run_install, tags: ["build", "unit_tests", "software_tests", "all_tests",
                                                                 "code_coverage", "codecov_tool",
                                                                 "python_code_coverage",
                                                                 "cpp_code_coverage", "check_deb_make",
                                                                 "complete_deb_check", "check_build",
                                                                 "python_code_style_check", "cpp_code_style_check",
                                                                 "xml_code_style_check", "catkin_code_style_check",
                                                                 "code_style_check", "create_workspace",
                                                                 "benchmarking", "check_install"]}
    - {role: ci/update_dependencies, when: run_build, tags: ["build", "unit_tests", "software_tests", "all_tests",
                                                             "code_coverage", "codecov_tool", "python_code_coverage",
                                                             "cpp_code_coverage", "check_deb_make",
                                                             "complete_deb_check", "check_build", "benchmarking",
                                                             "check_install"]}
    - {role: ci/common/packages, when: run_build, tags: ["unit_tests", "software_tests", "all_tests", "code_coverage",
                                                         "codecov_tool", "python_code_coverage",
                                                         "cpp_code_coverage", "check_deb_make",
                                                         "complete_deb_check", "python_code_style_check",
                                                         "xml_code_style_check", "catkin_code_style_check",
                                                         "cpp_code_style_check", "code_style_check", "check_build",
                                                         "upload_debs", "benchmarking", "check_install"]}
    - {role: ci/build/check, when: run_build, tags: ["check_build"]}
    - {role: ci/build/catkin, when: run_build, tags: ["build", "unit_tests", "software_tests", "all_tests",
                                                      "code_coverage", "codecov_tool",
                                                      "python_code_coverage", "cpp_code_coverage", "benchmarking"]}
    - {role: ci/benchmarking, when: run_build, tags: ["benchmarking"]}
    - {role: ci/code_coverage/python/setup, when: run_build, tags: ["python_code_coverage", "code_coverage",
                                                                    "codecov_tool"]}
    - {role: ci/code_coverage/cpp/setup, when: run_build, tags: ["cpp_code_coverage", "code_coverage", "codecov_tool"]}
    - {role: ci/tests/software_tests, when: run_build, tags: ["unit_tests", "software_tests", "code_coverage",
                                                              "codecov_tool", "python_code_coverage",
                                                              "cpp_code_coverage"]}
    - {role: ci/tests/all_tests, when: run_build, tags: ["all_tests"]}
    - {role: ci/tests/common, when: run_build, tags: ["unit_tests", "software_tests", "all_tests",
                                                      "code_coverage", "codecov_tool",
                                                      "python_code_coverage", "cpp_code_coverage"]}
    - {role: ci/code_style_check/python, when: run_build, tags: ["python_code_style_check", "code_style_check"]}
    - {role: ci/code_style_check/xml, when: run_build, tags: ["xml_code_style_check", "code_style_check"]}
    - {role: ci/code_style_check/catkin, when: run_build, tags: ["catkin_code_style_check", "code_style_check"]}
    - {role: ci/code_style_check/cpp, when: run_build, tags: ["cpp_code_style_check", "code_style_check"]}
    - {role: ci/code_style_check/license, when: run_build, tags: ["check_license"]}
    - {role: ci/deploy/check_install, when: run_build, tags: ["check_install"]}
    - {role: ci/deploy/build_debs, when: run_build, tags: ["check_deb_make", "complete_deb_check", "upload_debs"]}
    - {role: ci/deploy/complete_deb_check, when: run_build, tags: ["complete_deb_check"]}
    - {role: ci/deploy/check_deb_make, when: run_build, tags: ["check_deb_make", "complete_deb_check", "upload_debs"]}
    - {role: ci/deploy/upload_debs, when: run_build, tags: ["upload_debs"]}
    - {role: ci/servers/travis/finalize, when: run_build, tags: ["travis"]}
    - {role: ci/servers/shippable/finalize, when: run_build, tags: ["shippable"]}
    - {role: ci/servers/circle/finalize, when: run_build, tags: ["circle"]}
    - {role: ci/servers/semaphore/finalize, when: run_build, tags: ["semaphore"]}
    - {role: ci/servers/local/finalize, when: run_build, tags: ["local"]}
    - {role: ci/code_coverage/python/finalize, when: run_build, tags: ["python_code_coverage",
                                                                       "code_coverage", "codecov_tool"]}
    - {role: ci/code_coverage/cpp/finalize, when: run_build, tags: ["cpp_code_coverage", "code_coverage",
                                                                    "codecov_tool"]}
    - {role: ci/code_coverage/codecov, when: run_build, tags: ["codecov_tool"]}
