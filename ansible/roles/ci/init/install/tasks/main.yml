---
# Playbook for additional component installations

- name: Install more packages
  apt: 
    name: ['python3-wstool', 'python3-rosdep','python3-pip','cobertura','python3-bloom','fakeroot','libxml2-utils','libyubikey-dev','libykpers-1-dev','ccache']
  become: yes
  become_method: sudo
  become_user: root

- name: Install ros1 packages
  apt: 
    name: ['ros-{{ros_release}}-cmake-modules']
  become: yes
  become_method: sudo
  become_user: root
  when: 
    - ros_release != 'rolling' 
    - ros_release != 'humble'

# Using a specific version for empy as that's the one that is installed by default in Ubuntu Jammy from debian repos
# so pip will skip it. Otherwise pip throws an error when failing to uninstall the deb version to install the latest pip version.
# I don't really know what this package is needed for.
# We also install pycodestyle, since the roslint package (which comes with pycodestyle) is not supported for ros2
- name: Install PIP modules
  pip: 
    name: ['catkin_pkg','empy==3.3.4','coverage','catkin-lint','pylint', 'pycodestyle']
    extra_args: '--upgrade'
    executable: pip3
  become: yes
  become_method: sudo
  become_user: root
  when: (ros_release == 'rolling') or (ros_release == 'humble')

- name: Install PIP modules
  pip: 
    name: ['catkin_pkg','empy==3.3.2','coverage==6.5','catkin-lint','pylint==2.10.2']
    extra_args: '--upgrade'
    executable: pip3
  become: yes
  become_method: sudo
  become_user: root
  when: 
    - ros_release != 'rolling' 
    - ros_release != 'humble'

- name: Update users bashrc to point to the ROS installation
  lineinfile: dest={{ansible_env.HOME}}/.bashrc
              line="source /opt/ros/{{ros_release}}/setup.bash"
              regexp='^source.*/setup\.bash'
              insertafter=EOF
              backup=yes
