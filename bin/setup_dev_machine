#!/usr/bin/env bash

# Use > 1 to consume two arguments per pass in the loop (e.g. each
# argument has a corresponding value to go with it).
# Use > 0 to consume one or more arguments per pass in the loop (e.g.
# some arguments don't have a corresponding value to go with it such
# as in the --default example).
# note: if this is set to > 0 the /etc/hosts part is not recognized ( may be a bug )

set -e # fail on errors
# set -x # echo commands run

while [[ $# > 1 ]]
do
key="$1"

case $key in
    -c|--configbranch)
    SR_CONFIG_BRANCH="$2"
    shift # past argument
    ;;
    -b|--buildtoolsbranch)
    SR_BUILD_TOOLS_BRANCH="$2"
    shift # past argument
    ;;
    -w|--workspace)
    WORKSPACE_PATH="$2"
    shift # past argument
    ;;
    -r|--rosinstall)
    ROSINSTALL_PATH="$2"
    shift # past argument
    ;;
    -l|--githublogin)
    GITHUB_LOGIN="$2"
    shift # past argument
    ;;
    -p|--githubpassword)
    GITHUB_PASSWORD="$2"
    shift # past argument
    ;;
    --default)
    DEFAULT=YES
    ;;
    *)
            # unknown option
    ;;
esac
shift # past argument or value
done


# setting defaults
if [ -z "${SR_CONFIG_BRANCH}" ];
then
    SR_CONFIG_BRANCH="indigo-devel"
fi

if [ -z "${SR_BUILD_TOOLS_BRANCH}" ];
then
    SR_BUILD_TOOLS_BRANCH="master"
fi

if [ -z "${WORKSPACE_PATH}" ];
then
    WORKSPACE_PATH="~{{ros_user}}/indigo_ws/shadow"
fi

if [ -z "${ROSINSTALL_PATH}" ];
then
    ROSINSTALL_PATH="shadow_robot-indigo.rosinstall"
fi

# Check if the rosinstall path is relative or absolute
if [[ ${ROSINSTALL_PATH} =~ ^/ ]]; then
    # absolute, keep as is
    ROSINSTALL_PATH=${ROSINSTALL_PATH}
else
    # if relative go look for it in the data folder
    ROSINSTALL_PATH="../data/${ROSINSTALL_PATH}"
fi


echo "================================================================="
echo "|       Installing Shadow Robot development environment "
curl https://raw.githubusercontent.com/shadow-robot/sr-build-tools/master/bin/shadow_hand.txt
echo "                                                                |"
echo "================================================================="
echo ""
echo "possible options: "
echo "  * -w or --workspace path you want to use for the ROS workspace. The directory will be created. (~/indigo_ws by default)"
echo "  * -c or --configbranch which branch of the sr-config should be pulled (indigo-devel by default)"
echo "  * -r or --rosinstall alternative rosinstall file found in the data folder of the sr-build-tools repository."
echo "  * -l or --githublogin github login for private repositories."
echo "  * -p or --githubpassword github password for private repositories."
echo ""
echo "example: ./setup_dev_machine -w ~/myworkspace -c shadowrobot_1234 -l mygithublogin -p mysupersecretpassword"
echo ""
echo "sr-config branch      = ${SR_CONFIG_BRANCH}"
echo "sr-build-tools branch = ${SR_BUILD_TOOLS_BRANCH}"
echo "workspace paths       = ${WORKSPACE_PATH}"
echo "rosinstall file       = ${ROSINSTALL_PATH}"

pushd /tmp

echo ""
echo " ---------------------------------"
echo " |   Checking Python version     |"
echo " ---------------------------------"
echo ""

case "$(python --version 2>&1)" in
    *" 2."*)
        echo "Python 2 default, proceeding to install"
        ;;
    *)
        echo "Wrong Python version, this installation script requires Python 2 to be default"
        exit 1
        ;;
esac

echo ""
echo " ---------------------------------"
echo " |   Installing needed packages  |"
echo " ---------------------------------"
echo ""

sudo apt-get update

# python-crypto is only necessary for non-desktop images
# build-essential libssl-dev libffi-dev python-dev are necessary dependencies for the cryptography python package that is a dependency of paramiko (see http://www.paramiko.org/installing.html)
sudo apt-get install -y python-pip git libyaml-dev libpython2.7-dev python-crypto build-essential libssl-dev libffi-dev python-dev &
rm -rf sr-build-tools &
rm -rf ansible &
wait

sudo apt-get remove ansible -y &
sudo pip install --upgrade pip setuptools==44.0.0 &
wait

sudo pip install paramiko markupsafe PyYAML Jinja2 httplib2 six autobahn trollius txaio ansible==' 2.1.0.0'

sudo mkdir -p  /etc/ansible
sudo sh -c 'echo "[dev-machine]
localhost ansible_connection=local" > /etc/ansible/hosts'

echo ""
echo " -------------------"
echo " |   Cloning repo  |"
echo " -------------------"
echo ""

if [ -z "${SR_BUILD_TOOLS_BRANCH}" ];
  then
    git clone https://github.com/shadow-robot/sr-build-tools
  else
    git clone https://github.com/shadow-robot/sr-build-tools -b ${SR_BUILD_TOOLS_BRANCH}
fi

echo ""
echo " -------------------"
echo " | Running Ansible |"
echo " -------------------"
echo ""

ansible-playbook -vvv -K sr-build-tools/ansible/vagrant_site.yml --tags default --extra-vars "config_branch=${SR_CONFIG_BRANCH} ros_user=`whoami` ros_workspace=${WORKSPACE_PATH} ros_group=`whoami` ros_workspace_install=${ROSINSTALL_PATH} github_login=${GITHUB_LOGIN} github_password=${GITHUB_PASSWORD}"

echo ""
echo " ------------------------------------------------"
echo " | Install complete, please restart the machine |"
echo " ------------------------------------------------"
echo ""

popd
